<?xml version="1.0"?>

<robot xmlns:xacro="http://ros.org/wiki/xacro" name="$(arg name)">
  <!-- robot name parameter -->
  <xacro:arg name="name" default="" />

  <xacro:arg name="prefix" default="" />
  <xacro:arg name="gazebo_controllers" default="$(find husky_control)/config/control.yaml" />

  <xacro:include filename="$(find husky_description)/urdf/husky_macro.urdf.xacro" />

  <!-- Load husky description -->
  <xacro:husky prefix="$(arg prefix)" />


  <xacro:if value="$(arg is_sim)">

    <gazebo>
      <plugin name="$(arg prefix)gazebo_ros2_control" filename="libgazebo_ros2_control.so">
        <parameters>$(arg gazebo_controllers)</parameters>
      </plugin>
    </gazebo>

    <gazebo reference="$(arg prefix)imu_link">
      <sensor name="$(arg prefix)imu_sensor" type="imu">
      <plugin filename="libgazebo_ros_imu_sensor.so" name="$(arg prefix)imu_plugin">
          <ros>
            <namespace>$(arg prefix)</namespace>
            <remapping>~/out:=imu/data_raw</remapping>
          </ros>
          <initial_orientation_as_reference>false</initial_orientation_as_reference>
        </plugin>
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <visualize>true</visualize>
      </sensor>
    </gazebo>

    <gazebo reference="$(arg prefix)gps_link">
      <sensor name="$(arg prefix)gps_sensor" type="gps">
      <plugin filename="libgazebo_ros_gps_sensor.so" name="$(arg prefix)gps_plugin">
          <ros>
            <namespace>$(arg prefix)</namespace>
            <remapping>~/out:=gps/data</remapping>
          </ros>
        </plugin>
        <always_on>true</always_on>
        <update_rate>10</update_rate>
      </sensor>
    </gazebo>

    <gazebo reference="lidar_link">
      <sensor name="lidar" type="ray">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>5</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1.000000</resolution>
              <min_angle>0.000000</min_angle>
              <max_angle>6.280000</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.120000</min>
            <max>3.5</max>
            <resolution>0.015000</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>lidar_link</frame_name>
        </plugin>
      </sensor>
    </gazebo>

    <gazebo reference="camera_link">
      <sensor name="depth_camera" type="depth">
        <visualize>true</visualize>
        <update_rate>30.0</update_rate>
        <camera name="camera">
          <horizontal_fov>1.047198</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.05</near>
            <far>3</far>
          </clip>
        </camera>
        <plugin name="depth_camera_controller" filename="libgazebo_ros_camera.so">
          <baseline>0.2</baseline>
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <frame_name>camera_depth_frame</frame_name>
          <pointCloudCutoff>0.5</pointCloudCutoff>
          <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
          <distortionK1>0</distortionK1>
          <distortionK2>0</distortionK2>
          <distortionK3>0</distortionK3>
          <distortionT1>0</distortionT1>
          <distortionT2>0</distortionT2>
          <CxPrime>0</CxPrime>
          <Cx>0</Cx>
          <Cy>0</Cy>
          <focalLength>0</focalLength>
          <hackBaseline>0</hackBaseline>
        </plugin>
      </sensor>
    </gazebo>

  </xacro:if>

  <!-- Optional custom includes. -->
  <xacro:include filename="$(arg urdf_extras)" />

</robot>
